@model EmployeeListViewModel
@{
    ViewData["Title"] = "Index";
}

<div class="container-fluid">
    <h1 class="mb-4">Employees</h1>

    <div class="row my-3">
        <div class="col-md-3">
            <a asp-action="Create" class="btn btn-primary">Create New Employee</a>
        </div>
        <div class="col-md-9">
            <form asp-action="Index" method="get" class="form-inline float-right">
				<div class="row gap-3 align-items-center">
                    <div class="col-auto">
                        <div class="input-group">
                            <input asp-for="SearchTerm" class="form-control" placeholder="Search employees...">
                            <div class="input-group-append">
                                <button type="submit" class="btn btn-outline-success ms-2">Search</button>
                            </div>
                        </div>
                    </div>
                    <div class="col-auto">
                        <label class="col-form-label" asp-for="SortBy">Sort By:</label>
                    </div>
                    <div class="col-auto">
                        <select id="sortby" asp-for="SortBy" class="form-select">
                            <option value="name">Full Name</option>
                            <option value="email">Email</option>
                            <option value="department">Department Name</option>
                            <option value="status">Status</option>
                        </select>
                    </div>
                    <div class="col-auto">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" asp-for="IsAscending" />
                            <label class="form-check-label" asp-for="IsAscending">Ascending Order</label>
                        </div>
                    </div>
                    <div class="col-auto">
                        <button class="btn btn-outline-primary" type="submit">Apply Sort</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    @if (Model.EmployeeList is not null && Model.EmployeeList.Any())
    {
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="thead-dark">
                <tr>
                    <th>
                        @* asp-route-sortBy="name" asp-route-sortAscending="@(Model.SortBy == " name " ? !Model.SortAscending : true)" asp-route-page="@Model.Page" asp-route-pageSize="@Model.PageSize" asp-route-searchTerm="@Model.SearchTerm" *@
                            <a asp-action="Index" asp-route-searchTerm="@Model.SearchTerm" asp-route-sortBy="name" asp-route-isAscending="@(Model.IsAscending? false : true)">
                            Full Name
                            </a>
                    </th>
                    <th>
                            <a asp-action="Index" asp-route-searchTerm="@Model.SearchTerm" asp-route-sortBy="email" asp-route-isAscending="@(Model.IsAscending? false : true)">
                                Email
                            </a>
                    </th>
                    <th>
                            <a asp-action="Index" asp-route-searchTerm="@Model.SearchTerm" asp-route-sortBy="department" asp-route-isAscending="@(Model.IsAscending ? false : true)">
                                Department
                            </a>
                    </th>
                    <th>Status</th>
                        <th class="text-center">(De)Activate</th>
                    <th class="text-center">Details</th>
                    <th class="text-center">Edit</th>
                    <th class="text-center">Delete</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.EmployeeList)
                {
                    <tr>
                        <td>@item.FullName</td>
                        <td>@item.Email</td>
                        <td>@item.DepartmentName</td>
                        <td>
                            @if (item.IsActive)
                            {
                                <span class="badge bg-success text-center">Active</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary text-center">Inactive</span>
                            }
                        </td>
                        <td class="text-center">
                                <form asp-action="ToggleStatus" asp-controller="Employee" asp-route-id="@item.Id">
                                <button type="submit" class="btn btn-sm @(item.IsActive ? "btn-outline-secondary" : "btn-outline-success")">
                                     @(item.IsActive ? "DeActivate" : "Activate")
                                </button>
                            </form>
                        </td>
                        <td class="text-center">
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info me-2">
                                <i class="fas fa-info-circle"></i> Details
                            </a>
                        </td>
                        <td class="text-center">
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning me-2">
                                <i class="fas fa-edit"></i> Edit
                            </a>
                        </td>
                        <td class="text-center">
                            <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#DeleteModal-@item.Id">
                                <i class="fas fa-trash"></i> Delete
                            </button>


                            <div class="modal fade" id="DeleteModal-@item.Id" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h1 class="modal-title fs-5" id="exampleModalLabel">Delete Employee</h1>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            Are You Sure to Delete this Employee?
                                        </div>
                                        <div class="modal-footer">
                                            <form asp-action="Delete" asp-controller="Employee" asp-route-id="@item.Id" class="mt-4">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                                <input type="submit" value="Delete" class="btn btn-danger" />
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    
        var prevDisabled = Model.PageIndex == 1 ? "disabled" : "";
        var nextDisabled = Model.PageIndex * Model.PageSize >= Model.TotalCount ? "disabled" : "";
        // var totalPages = (int)Math.Ceiling(Model.TotalCount / (double)Model.PageSize);
    

    <div class="d-flex justify-content-between align-items-center">
        <div>
            Showing @(((Model.PageIndex - 1) * Model.PageSize) + 1) to @Math.Min(Model.PageIndex * Model.PageSize, Model.TotalCount) of @Model.TotalCount employees
        </div>

        <nav aria-label="Page navigation">
            <ul class="pagination">
                <li class="page-item @prevDisabled">
                        <a class="page-link" asp-action="Index" asp-route-searchTerm="@Model.SearchTerm" asp-route-pageNum="@(Model.PageIndex - 1)" asp-route-pageSize="@Model.PageSize" asp-route-sortBy="@Model.SortBy" asp-route-isAscending="@(Model.IsAscending)">
                        Previous
                    </a>
                </li>

                @for (int i = Math.Max(1, Model.PageIndex - 2);
                               i <= Math.Min(Model.TotalPages, Model.PageIndex + 2); i++)
                {
                    <li class="page-item @(i == Model.PageIndex ? " active " : " ")">
                            <a class="page-link" asp-action="Index" asp-route-searchTerm="@Model.SearchTerm" asp-route-pageNum="@i" asp-route-pageSize="@Model.PageSize" asp-route-sortBy="@Model.SortBy" asp-route-isAscending="@(Model.IsAscending)">
                            @i
                        </a>
                    </li>
                }

                <li class="page-item @nextDisabled">
                        <a class="page-link" asp-action="Index" asp-route-searchTerm="@Model.SearchTerm" asp-route-pageNum="@(Model.PageIndex + 1)" asp-route-pageSize="@Model.PageSize" asp-route-sortBy="@Model.SortBy" asp-route-isAscending="@(Model.IsAscending)">
                        Next
                    </a>
                </li>
            </ul>
        </nav>
    </div>
    }
    else{
        <div class="alert alert-info" role="alert">
            No employees are Found!
        </div>
	}
</div>
@if (!string.IsNullOrEmpty(TempData["Message"] as string))
{
    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
        <div id="liveToast" class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <strong class="me-auto">Company</strong>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                @TempData["Message"]
            </div>
        </div>
    </div>
}
